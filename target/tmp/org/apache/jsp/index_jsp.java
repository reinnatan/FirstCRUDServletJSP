/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.28.v20200408
 * Generated at: 2022-06-14 03:05:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <script src=\"/lib/bootstrap/js/bootstrap.js\"></script>\n");
      out.write("    <link rel=\"stylesheet\" href=\"/lib/bootstrap/css/bootstrap.css\" type=\"text/css\" media=\"screen\"/>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <form action=\"/login\" method=\"post\">\n");
      out.write("\n");
      out.write("        <section class=\"vh-100\" style=\"background-color: #508bfc;\">\n");
      out.write("          <div class=\"container py-5 h-100\">\n");
      out.write("            <div class=\"row d-flex justify-content-center align-items-center h-100\">\n");
      out.write("              <div class=\"col-12 col-md-8 col-lg-6 col-xl-5\">\n");
      out.write("                <div class=\"card shadow-2-strong\" style=\"border-radius: 1rem;\">\n");
      out.write("                  <div class=\"card-body p-5 text-center\">\n");
      out.write("\n");
      out.write("                    <h3 class=\"mb-5\">Sign in</h3>\n");
      out.write("\n");
      out.write("                    <div class=\"form-outline mb-4\">\n");
      out.write("                      <input name=\"email\" type=\"email\" id=\"typeEmailX-2\" class=\"form-control form-control-lg\" />\n");
      out.write("                      <label class=\"form-label\" for=\"typeEmailX-2\">Email</label>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <div class=\"form-outline mb-4\">\n");
      out.write("                      <input name=\"password\" type=\"password\" id=\"typePasswordX-2\" class=\"form-control form-control-lg\" />\n");
      out.write("                      <label class=\"form-label\" for=\"typePasswordX-2\">Password</label>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <!-- Checkbox -->\n");
      out.write("                    <div class=\"form-check d-flex justify-content-start mb-4\">\n");
      out.write("                      <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"form1Example3\" />\n");
      out.write("                      <label class=\"form-check-label\" for=\"form1Example3\"> Remember password </label>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <button class=\"btn btn-primary btn-lg btn-block\" type=\"submit\">Login</button>\n");
      out.write("\n");
      out.write("                    <hr class=\"my-4\">\n");
      out.write("\n");
      out.write("                    <button class=\"btn btn-lg btn-block btn-primary\" style=\"background-color: #dd4b39;\"\n");
      out.write("                      type=\"submit\"><i class=\"fab fa-google me-2\"></i> Sign in with google</button>\n");
      out.write("                    <button class=\"btn btn-lg btn-block btn-primary mb-2\" style=\"background-color: #3b5998;\"\n");
      out.write("                      type=\"submit\"><i class=\"fab fa-facebook-f me-2\"></i>Sign in with facebook</button>\n");
      out.write("\n");
      out.write("                  </div>\n");
      out.write("                </div>\n");
      out.write("              </div>\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("        </section>\n");
      out.write("    </form>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
